<?xml version="1.0" encoding="UTF-8"?>
<model xmlns="http://dbfound.googlecode.com/model" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://dbfound.googlecode.com/model https://raw.githubusercontent.com/nfwork/dbfound/master/tags/model.xsd">

    <query>
        <sql>
            select
                <sqlPart type="if" sourcePath="fields">
                    #{@fields},
                </sqlPart>
                user_id
            from user
            <sqlPart type="if" sourcePath="sort">
                order by #{@sort}
            </sqlPart>
        </sql>
    </query>

    <query name="sec">
        <sql>
            select user_id
            <sqlPart type="for" begin="," sourcePath="fields" separator="," item="field">
                <sqlPart condition="${@field} in ('user_code','user_name')">
					#{@field}
				</sqlPart>
            </sqlPart>
            from user
        </sql>
    </query>

    <execute>
        <sqls>
            <executeSql>
                INSERT INTO user
                (user_code,
                 user_name,
                 password,
                 create_by,
                 create_date)
                VALUES
                <sqlPart type="for" sourcePath="userList">
                   (${@user_code},
                    ${@user_name},
                    ${@password},
                    1,
                    NOW())
                </sqlPart>
                ON DUPLICATE KEY update user_name = values(user_name)
            </executeSql>
        </sqls>
    </execute>

    <execute name="update">
        <param name="user_name" dataType="varchar" emptyAsNull="false" />
		<sqls>
			<executeSql>
				update user
				   set
				    <sqlTrim>
						<sqlPart condition="${@user_name} is not null">
                            user_name = ${@user_name},
                        </sqlPart>
                        <sqlPart condition="${@user_code} is not null">
                            user_code = ${@user_code},
                        </sqlPart>
					</sqlTrim>
                where user_id = ${@user_id}
			</executeSql>
		</sqls>
	</execute>

    <query name="getGroup">
        <sql>
            select count(user_id) as num,
                  #{@group_fields}
            from user
            group by #{@group_fields}
        </sql>
    </query>

    <query name="getGroup1">
        <sql>
            select count(user_id) as num
            <sqlPart type="for" begin="," sourcePath="group_fields" separator=",">
                #{@value}
            </sqlPart>
            from user
            <sqlPart type="for" begin="group by " sourcePath="group_fields">
                #{@value}
            </sqlPart>
        </sql>
    </query>

</model>